use mavenmovies;
select * from rental;
use sakila;
select count(rental_id) from rental; -- Question-1 Retrieve the total number of rentals made in the Sakila database 

-- Question-2 Find the average rental duration (in days) of movies rented from the Sakila database. 
select * from rental;
select * from film;
select  avg( rental_duration) from film ;

-- Question-3 Display the first name and last name of customers in uppercase.
select * from customer;
select upper(first_name),upper(last_name) from customer;

select * from rental;
select avg(rental_date) from rental;
SELECT 
    rental_id, MONTH(rental_date)
FROM
    rental;-- Question-4 Extract the month from the rental date and display it alongside the rental ID
-- Question-5  Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select * from customer;
select customer_id, count(rental_id) from rental group by customer_id ;

-- Question-6 Find the total revenue generated by each store. 
use sakila;
select * from payment;
select * from staff;
select staff_id, sum(amount) from payment group by staff_id;
-- the film, inventory, rental, and customer tables.
-- Question-7 Display the title of the movie, customer s first name, and last name who rented it.
select * from film;
select * from inventory;
select * from rental;
select * from customer;
SELECT 
    title, first_name, last_name
FROM
    customer
        INNER JOIN
    rental ON rental.customer_id = customer.customer_id
        INNER JOIN
    inventory ON inventory.inventory_id = rental.inventory_id
        INNER JOIN
    film ON film.film_id = inventory.film_id;
    
    -- Question-8 Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
    select * from film;
    select * from film_actor;
    select * from film_text;
    select title from film_text where title = "Gone with the Wind";
    
    -- Group By questions
    -- question-1 Determine the total number of rentals for each category of movies.
    -- JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.
    select * from film;
    select * from film_category;
    select* from category;
    select * from rental;
   
   SELECT name, COUNT(rental_duration) AS total_number_of_rentals
FROM
    film
        INNER JOIN
    film_category ON film_category.film_id = film.film_id
        INNER JOIN
    category ON category.category_id = film_category.category_id
GROUP BY name;

-- Question- 2 Find the average rental rate of movies in each language.

select * from language;
select title,language_id from film group by language_id;
select  avg(rental_duration), name from film right join language on language.language_id=film.language_id group by name  ;

-- Question-3 Retrieve the customer names along with the total amount they've spent on rentals.
select * from customer;
select* from payment;
select * from rental;
SELECT 
    first_name, last_name, SUM(amount)
FROM
    customer
        INNER JOIN
    payment ON payment.customer_id = customer.customer_id
        INNER JOIN
    rental ON rental.customer_id = customer.customer_id
GROUP BY first_name , last_name;

-- Question -4 List the titles of movies rented by each customer in a particular city (e.g., 'London').

select * from customer;
select * from address;
select * from city;
select * from rental;
select * from inventory;
select * from film;
SELECT 
    first_name, last_name, title
FROM
    customer
        INNER JOIN
    address ON address.address_id = customer.address_id
        INNER JOIN
    city ON city.city_id = address.city_id
        INNER JOIN
    rental ON rental.customer_id = customer.customer_id
        INNER JOIN
    inventory ON inventory.inventory_id = rental.inventory_id
        INNER JOIN
    film ON film.film_id = inventory.film_id
WHERE city = 'London';

-- Question-5 Display the top 5 rented movies along with the number of times they've been rented.

select * from film;
SELECT 
    title AS name_of_the_movie, COUNT(title) as number_of_times_movie_rented
FROM
    film
        INNER JOIN
    inventory ON inventory.film_id = film.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id
    GROUP BY name_of_the_movie
order by number_of_times_movie_rented  desc limit 5;

-- Question-6 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.
select * from store;
select * from rental;
select * from inventory;
select * from customer;
SELECT 
    c.customer_id, concat(first_name, last_name) as name, st.store_id
FROM
    customer c
        INNER JOIN
    rental r ON r.customer_id = c.customer_id
        INNER JOIN
    inventory iv ON iv.inventory_id = r.inventory_id
        INNER JOIN
    store st ON st.store_id = iv.store_id
    where st.store_id in (1,2)
GROUP BY c.customer_id,st.store_id,name
having count(distinct(st.store_id));